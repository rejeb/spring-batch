<?xml version="1.0" encoding="UTF-8"?>
<beans   xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:batch="http://www.springframework.org/schema/batch" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
         xmlns:context="http://www.springframework.org/schema/context"
         xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd" xmlns:task="http://www.springframework.org/schema/task">
   
  <bean id="syncContactReader" 
	class="com.sofrecom.batch.step.SynchronizedItemReader">
      <constructor-arg name="delegate" ref="contactReader"/>
  </bean>
   
    <bean id="contactReader" 
        class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:/inputFiles/contacts-0.csv" />
        <property name="lineMapper">
            
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                    </bean>
                    
                </property>
                <property name="fieldSetMapper">
                    <bean class="com.sofrecom.batch.mapper.ContactFieldSetMapper" />
                </property>
            </bean>
        </property>
    </bean>
    
     <bean id="syncRegistrationReader" 
	class="com.sofrecom.batch.step.SynchronizedItemReader">
      <constructor-arg name="delegate" ref="registrationReader"/>
  </bean>
      <bean id="registrationReader" 
        class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:/outputFiles/registration.all.csv" />
        <property name="lineMapper">
            
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                    </bean>
                    
                </property>
                <property name="fieldSetMapper">
                    <bean class="com.sofrecom.batch.mapper.RegistrationFieldSetMapper" />
                </property>
            </bean>
        </property>
    </bean>
    <bean id="skipListener" scope="step" class="com.sofrecom.batch.listeners.Slf4jSkipListener" />
 
 <bean id="registrationWriter" 
          class="org.springframework.batch.item.file.FlatFileItemWriter">
	<property name="resource" value="file:target/classes/outputFiles/registration.all.csv" />
	<property name="shouldDeleteIfExists" value="true" />
	<property name="lineAggregator">
	  <bean
	  class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
		<property name="delimiter" value="," />
		<property name="fieldExtractor">
		  <bean	
                  class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
			<property name="names" value="contact, confirmation, confirmationTime" />
		  </bean>
		</property>
	  </bean>
	</property>
  </bean>
    <batch:job id="contactJob">
<!--        <batch:step id="contactPartition">
            <batch:partition  partitioner="rangePartitionner" step="contactStep" >
                <batch:handler task-executor="taskExecutor" grid-size="4" /> 
            </batch:partition>
        </batch:step>-->
        <batch:step id="contactStepRun" parent="contactStep" next="registrationStepRun"/>
           
      <batch:step id="registrationStepRun" parent="registrationStep"/>
     
 <batch:listeners >
              
     <batch:listener ref="genericLoggerListener"/>
             
            </batch:listeners>
    </batch:job>
  
       <batch:step id="contactStep"  >
        <batch:tasklet task-executor="threadExecutor" throttle-limit="4" >
            <batch:chunk   reader="syncContactReader" processor="contactItemProcessor" writer="registrationWriter" commit-interval="1"
                               skip-limit="5000" retry-limit="2"    >
            
                <batch:retryable-exception-classes >
                    <batch:include class="org.springframework.batch.item.file.FlatFileParseException"/>    
                    <batch:include class="java.lang.RuntimeException"/>
                    <batch:include class="org.springframework.batch.item.NonTransientResourceException"/>                                     
                </batch:retryable-exception-classes>
                <batch:retry-listeners > 						
                    <batch:listener  ref="retryListener" /> 			
                </batch:retry-listeners> 
                      <batch:skippable-exception-classes>
                    <batch:include class="org.springframework.batch.item.file.FlatFileParseException"/>        
                    <batch:exclude class="org.springframework.batch.item.NonTransientResourceException"/>                                     
                </batch:skippable-exception-classes>
                  
            </batch:chunk>
            <batch:listeners >
                <batch:listener ref="skipListener" />    
                <batch:listener ref="genericLoggerListener"/>
                <batch:listener ref="itemFailureLoggerListener"/>
                <batch:listener ref="itemLoggerListener"/>
            </batch:listeners>
        </batch:tasklet>
    </batch:step>
      <batch:step id="registrationStep"  >
        <batch:tasklet task-executor="threadExecutor" throttle-limit="4" >
            <batch:chunk   reader="syncRegistrationReader" processor="registrationItemProcessor" writer="registrationDBWriter" commit-interval="1"
                               skip-limit="5000" retry-limit="2"    >
            
                <batch:retryable-exception-classes >
                    <batch:include class="org.springframework.batch.item.file.FlatFileParseException"/>    
                    <batch:include class="java.lang.RuntimeException"/>
                    <batch:include class="org.springframework.batch.item.NonTransientResourceException"/>                                     
                </batch:retryable-exception-classes>
                <batch:retry-listeners > 						
                    <batch:listener  ref="retryListener" /> 			
                </batch:retry-listeners> 
                      <batch:skippable-exception-classes>
                    <batch:include class="org.springframework.batch.item.file.FlatFileParseException"/>        
                    <batch:exclude class="org.springframework.batch.item.NonTransientResourceException"/>                                     
                </batch:skippable-exception-classes>
                  
            </batch:chunk>
            <batch:listeners >
                <batch:listener ref="skipListener" />    
                <batch:listener ref="genericLoggerListener"/>
                <batch:listener ref="itemFailureLoggerListener"/>
                <batch:listener ref="itemLoggerListener"/>
            </batch:listeners>
        </batch:tasklet>
    </batch:step>
  
</beans>
